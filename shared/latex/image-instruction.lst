==> Remplace par une bulle <==
- [x] ["IKTOS.ai", "", "", "DELETE", "iktos-drug-design"]
- [x] ["IMAGENET", "", "", "DELETE", "imagenet"]
- [x] ["AMAZON MECHANICAL TURK", "", "", "DELETE", "amazon-mechanical-turc"]
- [x] ["ANACONDA", "", "", "DELETE", "anaconda_logo"]
- [x] ["AWS", "", "", "DELETE", "aws-logo"]
- [x] ["BAD RABBIT", "", "", "DELETE", "bad-rabbit"]
- [x] ["CNIL", "", "", "DELETE", "cnil-logo"]
- [x] ["Minority Report", "", "", "DELETE", "minorit-report"]
- [x] ["OVH", "", "", "DELETE", "ovh-logo"]
- [x] ["PYTHON", "", "", "DELETE", "python_logo"]
- [x] ["RGPD", "", "", "DELETE", "rgpd"]
- [x] ["BAIDU", "", "", "DELETE", "Baidu"]

==> Remplace par du texte <==
- [x] ["IBM WATSON", "gagne Jeopardy", "", "DELETE", "jeopardy-watson"]
- [x] ["Présentateur JT", "n'est pas humain", "", "DELETE", "jt-chine"]
- [x] ["Le CEO Google, Sundar Pichai, répond à la question posé par le congrès Américain :", "Quand je demande des images d'abruti à mon téléphone, pourquoi est-ce que j'obtiens des images de Donald Trump ?", "", "DELETE", "google-ceo-congress"]
- [x] ["AMAZON", "favorise l'embauche des hommes", "", "DELETE", "amazon-ai-favor-men"]
- [x] ["La chine", "traque ses musulmans", "", "DELETE", "chine-musulmans-traque"]
- [x] ["Alexandre Robicquet", ", chercheur en intelligence artificielle, est l'égérie d'un parfum d'Yves Saint Laurent.", "", "DELETE", "data-scientist-star"]
- [x] ["OrCam", " : Lunettes pour aveugles", "", "DELETE", "lunettes-pour-aveugle"]
- [x] ["Le Deep Learning", "à besoin de GPU puissants en quantité", "", "DELETE", "gpu-fun"]

==> verified source <==
- [x] [""MS-Celeb-1M: A Dataset and Benchmark for Large-Scale Face Recognition". (2016)", "Y, et al.", "ArXiv", "", "ms-celeb"]
- [x] ["Probabilistic topic models", "Blei, D. M. (2012)", "ArXiv", "", "big-data-documents"]
- [x] [" The Caltech 256", "Griffin, G. Holub, AD. Perona, P.", "", "", "caltech256"]
- [x] ["typical CNN architecture", "Aphex34", "CC-BY-SA-4.0", "", "cnn-schema"]
- [x] ["Unpaired Image-to-Image Translationusing Cycle-Consistent Adversarial Networks", "un-Yan Zhu∗Taesung et al., UC Berkeley", "ArXiv", "", "cyclegan"]
- [x] ["https://deepmind.com/blog/article/deepmind-ai-reduces-google-data-centre-cooling-bill-40", "Google", "", "", "deepmind-energy-consumption"]
- [x] ["Unpaired Image-to-Image Translationusing Cycle-Consistent Adversarial Networks", "Jun-Yan Zhu et al.", "ArXiv", "", "gan-horse-zebra"]
- [x] ["Unpaired Image-to-Image Translationusing Cycle-Consistent Adversarial Networks", "Jun-Yan Zhu et al.", "ArXiv", "", "gan-schema"]
- [x] ["Unpaired Image-to-Image Translationusing Cycle-Consistent Adversarial Networks", "Jun-Yan Zhu et al.", "ArXiv", "", "gan-zebra-horse"]
- [x] ["Deep neural networks are more accurate than humans at detecting sexual orientation from facial images", "Y. Wang, M. Kosinski", "psyarxiv.com", "", "gay-or-not"]
- [x] ["Annotated images from the Open Images dataset.", "Left: FAMILY MAKING A SNOWMAN by mwvchamber. Right: STANZA STUDENTI.S.S. ANNUNZIATA by ersupalermo", "CC-BY-2.0", "", "openimage"]
- [x] ["Principle Component Analysis on an image of a fish.", "https://fr.wikipedia.org/wiki/Utilisateur:Lehalle", "CC-BY-SA-2.5", "", "pca-fish"]
- [x] ["A scatter plot of samples that are distributed according a multivariate (bivariate) Gaussian distribution centered at (1,3) with a standard deviation of 3 in the (0.866, 0.5) direction and of 1 in the orthogonal direction. The directions represent the Principal Components (PC) associated with the distribution.", "https://commons.wikimedia.org/wiki/User:Nicoguaro", "CC BY 4.0", "", "pca-nuage"]
- [x] ["Precision and recall", "https://commons.wikimedia.org/wiki/User:Walber", "CC-BY-SA-4.0", "", "precisionrecall"]
- [x] ["Random forest model", "Gustavo Machado et al., North Carolina State University", "CC-BY-SA-4.0", "", "random-forest-full"]
- [x] ["The Street View House Numbers (SVHN) Dataset", "Stanford", "http://ufldl.stanford.edu", "", "streetviewdataset"]
- [x] ["GOOGLE Cloud", "Google", "Public Domain", "", "gcloud-logo"]
- [x] ["THE MNIST DATABASE", "LeCun, Yann", "yann.lecun.com", "", "mnist"]
- [x] ["Le dataset VQA", "visualqa.org", "CC-BY-SA-4.0", "", "visual-qa"]

==> change image <==
- [x] ["Microsoft COCO: Common Objects in Context", "TY Lin et al.", "ArXiv", "ms-coco-2", "ms-coco"]
- [x] ["Neuron and myelinated axon, with signal flow", "Prof. Loc Vu-Quoc", "CC-BY-SA-4.0", "biological-neuron-arrow", "biological-neuron"]
- [x] ["Logo DARPA Launch Challenge", "DARPA", "Domaine public", "darpa-launch-challenge", "darpa-urban-challenge"]
- [x] ["Screenshot du jeu Foldit", "Animation Research Labs", "CC-BY-SA-3.0-DE", "foldit_screenshot", "foldit"]
- [x] ["Conditional generative adversarial nets for convolutional face generation", "Jon Gauthier", "foldl.me", "gan-faux-visages-2", "gan-faux-visages"]
- [x] ["Schéma d'une coupe longitudinale d’œil humain.", "https://de.wikipedia.org/wiki/Benutzer:Talos, ", "CC BY-SA 3.0", "oeil-humain", "oeil-coupe"]
- [x] ["Les aires visuelles V1, V2 et V3 situées sur la scissure calcarine, schéma inspiré de Wichmann et al Anatomy of the visual system, Eur Jour Radiol 49, 2004", "https://commons.wikimedia.org/wiki/User:Pancrat", "GNU Free Documentation License", "visual-cortex-wiki", "visual-cortex"]
- [x] ["", "", "https://iconmonstr.com/license/", "sablier", "sablier-windows"]
- [x] ["", "", "licence Pixabay", "adn-exchange", "adn-data"]
- [x] ["", "", "licence Pixabay", "adn-exchange", "adn-big-data"]
- [x] ["", "", "licence Pixabay", "", "Machine-Learning-Cybersécurité"]
- [x] ["", "", "licence Pixabay", "informatique-ai", "it-ai"]
- [x] ["", "", "licence Pixabay", "chess-pixabay", "echec"]
- [x] ["", "", "licence Pixabay", "spaghetti-pixabay", "spaghetti"]
- [x] ["Passage pour piétons", "https://commons.wikimedia.org/wiki/User:Kingroyos", "CC BY-SA 3.0", "panneau-pieton", "chine-reco-face-fail"]
- [x] ["", "nzmog", "", "approximation", "universal-approximation"]

==> changé dans le latex, normalement rien a faire. Certaines ont tout simplement disparues <==
- [x] ["créer illustration chine orweillien ?", "", "", "TEX", "chine-orwell"]
- [x] ["", "", "", "TEX", "acquisition-gafa"]
- [x] ["", "", "", "TEX", "esante-landscape"]
- [x] ["", "", "", "TEX", "esante-solutions"]
- [x] ["", "", "", "TEX", "watson-personality-insight"]
- [x] ["", "", "", "TEX", "robot-chirurgien"]
- [x] ["", "", "", "TEX", "robotdoc"]
- [x] ["", "", "", "TEX", "airport-lie-detection"]
- [x] ["", "", "", "TEX", "baby-sitter-reliable"]
- [x] ["", "", "", "TEX", "cylance"]
- [x] ["", "", "", "TEX", "deepinstinct-2"]
- [x] ["", "", "", "TEX", "bras-bioniques"]
- [x] ["", "", "", "TEX", "alphazero"]
- [x] ["", "", "", "TEX", "zao-deepfake"]
- [x] ["", "", "", "TEX", "vs-intellicode-2"]
- [x] ["", "", "", "TEX", "xkcd-easy-impossible"]
- [x] ["", "", "", "TEX", "chinese-street-surveillance"]
- [x] ["", "", "", "TEX", "ibm-watson-struct"]
- [x] ["", "", "", "TEX", "ms-azure"]
- [x] ["", "", "", "TEX", "ms-azure2"]
- [x] ["", "", "", "TEX", "amazon-ai"]
- [x] ["", "", "", "TEX", "lda"]
- [x] ["", "", "", "TEX", "roc"]
- [ ] ["", "", "", "TEX", "openai-gpt2-example"]


TIKZ
- [ ] ["", "refaire slides et aborder dimensionalité", "tikz", "TODO", "variables"]
- [ ] ["", "", "tikz", "TODO", "neuron-model"]
- [ ] ["", "", "tikz", "TODO", "nn-rnn-comparaison"]
- [ ] ["", "", "tikz", "TODO", "ia-ml-deep"]
- [ ] ["", "", "tikz", "TODO", "bayesian-net"]
- [ ] ["", "", "tikz", "TODO", "decision-tree-2"]
- [ ] ["", "", "tikz", "TODO", "deep-auto-encoder"]
- [ ] ["", "", "tikz", "TODO", "dropout-2"]
- [ ] ["", "", "tikz", "TODO", "graph-oriented"]
- [ ] ["", "", "tikz", "TODO", "gru"]
- [ ] ["", "", "tikz", "TODO", "multi-task-v2"]
- [ ] ["", "", "tikz", "TODO", "lstm-schema"]
- [ ] ["", "", "tikz", "TODO", "ml-craftmanship"]
- [ ] ["", "", "tikz", "TODO", "ml-illustration"]
- [ ] ["", "", "tikz", "TODO", "molecule-release"]
- [ ] ["", "", "notebook", "TODO", "convolution"]
- [ ] ["", "", "notebook", "TODO", "bidirectional-rnn"]
- [ ] ["", "", "notebook", "TODO", "pooling"]
- [ ] ["", "", "notebook", "TODO", "regression-tree"]
- [ ] ["", "", "notebook", "TODO", "learning-rate-big-small"]

MATPLOTLIB/TP
- [ ] ["", "", "nuage de mots en libre office du cul", "TODO", "data-science"]
- [ ] ["", "", "notebook", "TODO", "data-augmentation"]
- [ ] ["", "", "notebook", "TODO", "overfitting"]
- [ ] ["", "", "notebook", "TODO", "over-underfitting"]
- [ ] ["", "", "notebook", "TODO", "separable-problem-nonlinear"]
- [ ] ["", "", "notebook", "TODO", "separable-problem-nonlinear-solution"]
- [x] ["Matrice de confusion", "", "", "confusion-matrix-nzmog", "confusion-matrix"]
- [x] ["seaborn.barplot(x = 'OverallQual', y = 'SalePrice', data = ames)", "", "", "barplot-nzmog", "barplot"]
- [x] ["seaborn.countplot(df['quality'])", "", "", "countplot-nzmog", "countplot"]
- [x] ["Pairplot("Iris Data")", "", "", "pairplot-nzmog", "pairplot"]
- [x] ["Classification de données obtenues grâce à XOR", "", "", "xor-nzmog", "xor"]
- [x] ["Données linéairement séparables", "", "", "separable-problem-linear-nzmog", "separable-problem-linear"]
- [x] ["Séparateur linéaire", "", "", "separable-problem-linear-solution-nzmog", "separable-problem-linear-solution"]
- [x] ["Séparateur linéaire sous-optimal", "", "", "separable-problem-linear-solution-bad-nzmog", "separable-problem-linear-solution-bad"]
- [x] ["Schéma d'un SVM", "", "", "svm-schema-nzmog", "separable-problem-linear-svm"]
- [x] ["Schéma d'un SVM", "", "", "svm-schema-nzmog", "svm-schema"]
- [x] ["Effet du nombre d'itération sur le surraprentissage des réseaux de neurones", "", "", "early-stopping-nzmog", "early-stopping"]
- [x] ["Mise en évidence du surraprentissage", "", "", "fit-nzmog", "fit"]
- [x] ["Mixture de Gaussiennes univariée", "", "", "gaussian-mixture-univariate-nzmog", "gaussian-mixture-univariate"]
- [x] ["Régression polynomiale sur des données brutes", "", "", "regression-polynomiale-exemple-nzmog", "regression-polynomiale-exemple"]
- [x] ["Mise en évidence du surraprentissage sur les performances", "", "", "learning-curve-nzmog", "learning-curve"]
- [x] ["Trouver un bon compromis entre plus-value et effort d'investissement en ML", "", "", "ml-effort-vs-value-nzmog", "ml-effort-vs-value"]
- [x] ["pandas.Dataframe.corr("Caractéristiques")", "", "", "corrmat-nzmog", "corrmat"]
- [x] ["seaborn.distplot("Prix de vente")", "", "", "distplot-nzmog", "distplot"]
- [x] ["scipy.stats.probplot(X, dist='norm', plot=plt)", "", "", "qqplot-nzmog", "qqplot"]
- [x] ["Régression linaire du prix en fonction de la surface", "", "", "regression-nzmog", "regression-line-1"]
- [x] ["seaborn.jointplot(x='Surface', y='Prix')", "", "", "scatter-nzmog", "scatter"]
- [x] ["seaborn.violinplot(x=Qualité, y=Prix)", "", "", "violinplot-nzmog", "violinplot"]
- [x] ["Résiduels", "", "", "residuals-1-nzmog", "residuals-1"]
- [x] ["Résiduels", "", "", "residuals-2-nzmog", "residuals-2"]
- [x] ["Cours des actions NVIDIA et BTC (divisé par 100)", "", "", "nvidia-stock-history-nzmog", "nvidia-stock-history"]
- [x] ["ROC space", "https://en.wikipedia.org/wiki/User:Indon", "GFDL", "", "roc-space"]
3D
- [ ] ["", "", "notebook", "TODO", "batch-size-effect"]
- [ ] ["", "", "notebook", "TODO", "gradient-clipping"]
- [ ] ["", "", "notebook", "TODO", "regression-hyperplan"]
- [ ] ["", "", "notebook", "TODO", "gradient"]
- [ ] ["", "", "notebook", "TODO", "separable-problem-nonlinear-kernelsvm"]

